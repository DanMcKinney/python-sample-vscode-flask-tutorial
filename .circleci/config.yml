
version: 2.1


jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.12

    steps:
      - checkout
      - run: |
         CLOUDSMITH_API_KEY=$(curl -X POST -H "Content-Type: application/json" -d "{\"oidc_token\":\"$CIRCLE_OIDC_TOKEN_V2\", \"service_slug\":\"circleci-0yjm\"}" https://api.cloudsmith.io/openid/demo/ | jq -r '.token')
         echo "$CLOUDSMITH_API_KEY"
         poetry config unset repositories.pypi
         poetry config repositories.cloudsmith  https://dl.cloudsmith.io/basic/demo/gh-actions/python/simple/
         poetry config http-basic.cloudsmith circleci-0yjm $CLOUDSMITH_API_KEY 
         poetry install

      - run: |
         # stop the build if there are Python syntax errors or undefined names
         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - run:
          name: Run tests
          # This assumes pytest is installed via the install-package step above
          command: pytest



# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test